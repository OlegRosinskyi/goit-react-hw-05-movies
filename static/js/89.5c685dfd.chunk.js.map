{"version":3,"file":"static/js/89.5c685dfd.chunk.js","mappings":"2PAGaA,EAAYC,EAAAA,GAAAA,IAAH,yEACTC,EAAaD,EAAAA,GAAAA,IAAH,wFACVE,EAAaF,EAAAA,GAAAA,IAAH,wCACVG,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,qO,2BCsEjB,EA5DqB,WACpB,IAAD,IASQK,EAPJ,GAA8DC,EAAAA,EAAAA,UAAS,CAAC,GAAxE,eAAOC,EAAP,KAAgCC,EAAhC,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QACDE,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,QAAO,GAChBC,GAAeD,EAAAA,EAAAA,QAAO,IACtBE,GAAcF,EAAAA,EAAAA,QAAO,IACrBG,EAAO,iBAAGN,QAAH,IAAGA,GAAH,UAAGA,EAAUO,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAkBzC,OAhBsDd,EAAT,OAAxCE,EAAwBa,YAA6B,yBAA+B,UAAMC,EAAAA,IAAN,OAAqBC,EAAAA,IAArB,OAAoCf,EAAwBa,cAEzJG,EAAAA,EAAAA,YAAU,WAEqB,IAApBC,OAAOf,IAAgC,KAAZA,GAC5BI,EAAOY,UAAYD,OAAOf,KAC5BI,EAAOY,QAAUD,OAAOf,IACxBiB,EAAAA,EAAAA,GAAWC,EAAAA,GAAeC,EAAAA,GAAmBf,EAAOY,QAASI,EAAAA,IACxDC,MAAK,SAAAC,GACNvB,EAA2BuB,EAAIC,MAC/BjB,EAAaU,QAAUM,EAAIC,KAAKC,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,MAC/DrB,EAAYS,QAAUM,EAAIC,KAAKM,aAAaC,MAAM,EAAG,EACtD,IAEL,GAAE,CAAE9B,KAGF,0BACIF,GACA,4BACI,gCAAM,UAACJ,EAAD,CAAMqC,GAAIvB,EAAV,WAAmB,SAAC,MAAD,IAAnB,iBACN,UAAClB,EAAD,YACI,0BAAK,gBAAK0C,IAAKpC,EAAKqC,IAAKnC,EAAwBoC,WACjD,UAACzC,EAAD,YACI,0BAAKK,EAAwBqC,eAA7B,KAA+C5B,EAAYS,QAA3D,QACA,wCAAiBlB,EAAwBsC,aAAzC,QACA,sCACA,uBAAItC,EAAwBuC,YAC5B,oCACA,uBAAI/B,EAAaU,iBAIzB,SAACxB,EAAD,KACI,oDACA,2BACI,yBACI,SAACE,EAAD,CAAMqC,GAAG,OAAT,qBAEJ,yBACI,SAACrC,EAAD,CAAMqC,GAAG,UAAT,2BAGR,SAACvC,EAAD,KACA,SAAC,KAAD,QACD,oBAGlB,C","sources":["pages/MovieDetails.stiled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\nexport const ResultBox = styled.div` display:flex; margin-top:10px; margin-bottom:10px;`\nexport const ResultLine = styled.div` width: 100%;     box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.5); ` \nexport const ResultText = styled.div` margin-left:20px;`\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-size: 18px;\n  font-weight: 500;\n\n  &.active {\n    color: #f30909;\n   // background-color: orangered;\n  }`\n","\nimport { useLocation, Outlet, useParams } from \"react-router-dom\";\nimport {useEffect,useRef,useState} from \"react\"\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { ResultBox } from './MovieDetails.stiled';\nimport { ResultLine } from './MovieDetails.stiled';\nimport { ResultText,Link } from './MovieDetails.stiled';\nimport { requestGet } from '../components/requestGet';\nimport {\n    BASE_IMG_URL,\n    MOBILE_SIZES,\n    API_KEY,\n    MAIN_PART_URL,\n    GET_MOVIE_DETAILS,\n} from '../components/vars';\n\nconst MovieDetails = () =>\n{\n\n    const [informationMovieDetails, setInformationMovieDetails] = useState({});\n    const {movieId} = useParams();\n    const location = useLocation();\n    const prevId = useRef(0);\n    const genresString = useRef('');\n    const yearRelease = useRef('');\n    const go_Back = location?.state?.from ?? '/';\n    let url;\n        (informationMovieDetails.poster_path === null) ?  url= `../images/mi_fotou.jpg` : url = `${BASE_IMG_URL}${MOBILE_SIZES}${informationMovieDetails.poster_path}`\n    \nuseEffect(() => {\n\n      if ((Number(movieId) === 0) ||( movieId === '')) { return; }\n      if (prevId.current !== Number(movieId)) {\n        prevId.current = Number(movieId);\n        requestGet(MAIN_PART_URL, GET_MOVIE_DETAILS, prevId.current, API_KEY)\n            .then(res => {\n            setInformationMovieDetails(res.data);\n            genresString.current = res.data.genres.map(el => el.name).join(', ');\n            yearRelease.current = res.data.release_date.slice(0, 4);\n          });\n      }\n     }, [ movieId])\n\n    return (\n        <main>\n           {informationMovieDetails?\n            <div>\n                <div> <Link to={go_Back}><BiArrowBack/>Go back</Link></div>\n                <ResultBox >\n                    <div><img src={url} alt={informationMovieDetails.title} /></div>\n                    <ResultText>\n                        <h2>{informationMovieDetails.original_title} ({yearRelease.current})</h2>\n                        <p>User Score: { informationMovieDetails.vote_average }%</p>\n                        <h3>Overview</h3>\n                        <p>{informationMovieDetails.overview}</p>\n                        <h2>Genres</h2>\n                        <p>{genresString.current}</p>\n                       \n                    </ResultText> \n                </ResultBox>    \n                <ResultLine></ResultLine>\n                    <h4>Additional information</h4>\n                    <ul >\n                        <li>\n                            <Link to=\"cast\"  >Cast</Link>\n                        </li>\n                        <li>\n                            <Link to=\"reviews\" >Reviews</Link>\n                        </li>\n                    </ul>\n                    <ResultLine></ResultLine>\n                    <Outlet/>\n            </div>:<div></div> } \n      </main>\n     )\n}\nexport default MovieDetails;\n\n"],"names":["ResultBox","styled","ResultLine","ResultText","Link","NavLink","url","useState","informationMovieDetails","setInformationMovieDetails","movieId","useParams","location","useLocation","prevId","useRef","genresString","yearRelease","go_Back","state","from","poster_path","BASE_IMG_URL","MOBILE_SIZES","useEffect","Number","current","requestGet","MAIN_PART_URL","GET_MOVIE_DETAILS","API_KEY","then","res","data","genres","map","el","name","join","release_date","slice","to","src","alt","title","original_title","vote_average","overview"],"sourceRoot":""}